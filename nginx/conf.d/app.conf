# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name localhost eduhope.org www.eduhope.org;
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # For Let's Encrypt HTTP-01 challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name localhost eduhope.org www.eduhope.org;
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # For Let's Encrypt HTTP-01 challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# HTTPS Server - Temporarily disabled until SSL certificates are generated
# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     http2 on;
#     server_name eduhope.org www.eduhope.org;

#     # SSL Configuration (will work once certificates are generated)
#     ssl_certificate /etc/letsencrypt/live/eduhope.org/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/eduhope.org/privkey.pem;
#     ssl_trusted_certificate /etc/letsencrypt/live/eduhope.org/chain.pem;
    
#     # SSL Optimization
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers on;

#     # Security Headers
#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#     add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;" always;
    
#     # Hide server version
#     server_tokens off;

#     # Logging
#     access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
#     error_log /var/log/nginx/error.log warn;

#     # Gzip Compression
#     gzip on;
#     gzip_vary on;
#     gzip_proxied any;
#     gzip_comp_level 6;
#     gzip_types text/plain text/css text/xml application/json application/javascript application/xml application/xml+rss application/ld+json application/geo+json application/x-javascript text/javascript;
#     gzip_min_length 1000;

#     # Next.js static files with aggressive caching
#     location /_next/static/ {
#         proxy_cache STATIC;
#         proxy_pass http://app:3000;
#         add_header X-Cache-Status $upstream_cache_status;
#         expires 1y;
#         access_log off;
#     }

#     # Static files with caching
#     location /static/ {
#         proxy_cache STATIC;
#         proxy_pass http://app:3000;
#         add_header X-Cache-Status $upstream_cache_status;
#         expires 1y;
#         access_log off;
#     }

#     # Media files with caching
#     location /media/ {
#         proxy_cache STATIC;
#         proxy_pass http://app:3000;
#         add_header X-Cache-Status $upstream_cache_status;
#         expires 30d;
#         access_log off;
#     }

#     # API routes - no caching
#     location /api/ {
#         proxy_pass http://app:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#     }

#     # Next.js page routes
#     location / {
#         proxy_pass http://app:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
        
#         # Timeouts
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
        
#         # Buffer size for POST requests
#         client_max_body_size 10m;
        
#         # Enable gzip for responses from the backend
#         gzip on;
#         gzip_proxied any;
#         gzip_types *;
#     }

#     # Health check endpoint
#     location /health {
#         access_log off;
#         add_header Content-Type text/plain;
#         return 200 'OK';
#     }

#     # Error pages
#     error_page 404 /404.html;
#     error_page 500 502 503 504 /50x.html;
    
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }
# }
